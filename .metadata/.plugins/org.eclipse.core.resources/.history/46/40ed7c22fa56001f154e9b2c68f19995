package com.wipro.bookingms.serializer;

import java.nio.ByteBuffer;
import java.time.ZoneOffset;
import java.util.Map;

import org.apache.kafka.common.serialization.Serializer;

import com.wipro.bookingms.entity.Booking;

public class BookingSerailizer implements Serializer<Booking> {

    @Override
    public void configure(Map<String, ?> configs, boolean isKey) {
        // Configuration if needed
    }

    @Override
    public byte[] serialize(String topic, Booking data) {
        if (data == null) {
            return null;
        }

        byte[] bookingId = data.getBookingId().getBytes();
        byte[] flightId = data.getFlightId().getBytes();
        byte[] userId = data.getUserId().getBytes();
        byte[] status = data.getStatus().getBytes();

        ByteBuffer buffer = ByteBuffer.allocate(4 + bookingId.length + 4 + flightId.length + 4 + userId.length + 8 + 4 + status.length);

        buffer.putInt(bookingId.length);
        buffer.put(bookingId);

        buffer.putInt(flightId.length);
        buffer.put(flightId);

        buffer.putInt(userId.length);
        buffer.put(userId);

        buffer.putLong(data.getBookingTime().toEpochSecond(ZoneOffset.UTC));

        buffer.putInt(status.length);
        buffer.put(status);

        return buffer.array();
    }

    @Override
    public void close() {
        // Cleanup if needed
    }

}
